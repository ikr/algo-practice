#!/bin/bash

if [ "$#" -ne 1 ]; then
    echo "Usage: ./add 'Problem Title With Spaces'"
    exit 1
fi

name=$(echo -n "$1" | sed 's/ /_/g')

code=$(cat <<EOF
#include "lest.hpp"
#include <bits/stdc++.h>
using namespace std;

struct Solution final {
    int solve_it() const { return 42; }
};

// clang-format off
const lest::test tests[] = {
    CASE("Example 1") {
        const auto actual = Solution{}.solve_it();
        const auto expected = 42;
        EXPECT(actual == expected);
    },
    CASE("Example 2") {
        const auto actual = Solution{}.solve_it();
        const auto expected = 42;
        EXPECT(actual == expected);
    },
};
// clang-format on

int main(int argc, char **argv) { return lest::run(tests, argc, argv); }
EOF
)

makefile=$(cat <<EOF
build:
	g++ -std=gnu++17 -Wall -Wextra -Wshadow -Wfloat-equal -Wconversion -Wlogical-op -Wshift-overflow=2 -Wduplicated-cond -pedantic -Wcast-qual -Wcast-align -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_FORTIFY_SOURCE=2 -O2 -fsanitize=address -fsanitize=undefined -fno-sanitize-recover -fstack-protector -o ./solution ./solution.cpp

run: build
	./solution -p
EOF
)

mkdir "./$name"
cd "./$name"
ln -s ../../../lest/include/lest/lest.hpp ./lest.hpp
echo "$code" > ./solution.cpp
echo "$makefile" > ./Makefile
echo '-std=c++17' > ./compile_flags.txt
emacsclient -n ./solution.cpp
echo "cd ./$name && make run" | xclip -selection clipboard
